high=c(2, 1, 10000, .01, 2))
#this fits the model to the data with a combination of a global algorithm and a local algorithm
fitmodel = function(patient, decay, parameters, V, low, high) {
known=c(V) #these are the fixed values
times = patient$studytime
fit=nloptr(x0=parameters, eval_f=cost, lb=low, ub=high,
patient=patient, decay=decay, times=times, known=known,
opts=list(algorithm="NLOPT_GN_MLSL_LDS", maxeval=10000, maxtime=30,
local_opts=list(algorithm="NLOPT_LN_COBYLA", xtol_rel=1e-10)))
modtime = seq(times[1], 200, 1)
modparam = fit$solution
modelopt = getmodel(modparam, patient, decay, modtime, known)
plot(times, log10(patient$viral), ylim=c(1, 5), xlim=c(-20,200))
lines(modtime, log10(1000*modelopt$V), type='l')
return(fit)
}
#this fits the model to the data with a combination of a global algorithm and a local algorithm
fitmodel = function(patient, decay, parameters, V, low, high) {
known=c(V) #these are the fixed values
times = patient$studytime
fit=nloptr(x0=parameters, eval_f=cost, lb=low, ub=high,
patient=patient, decay=decay, times=times, known=known,
opts=list(algorithm="NLOPT_GN_MLSL_LDS", maxeval=10000, maxtime=30,
local_opts=list(algorithm="NLOPT_LN_COBYLA", xtol_rel=1e-10)))
modtime = seq(times[1], 200, 1)
modparam = fit$solution
modelopt = getmodel(modparam, patient, decay, modtime, known)
plot(times, log10(patient$viral), ylim=c(1, 5), xlim=c(-20,200))
lines(modtime, log10(1000*modelopt$V), type='l')
return(fit)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=10^2.410852713178294, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=10^(2.410852713178294-1), low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=10^(2.410852713178294-3), low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=3.547, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
patient20 = make20()
patient20
#diff equations
ODE = function(times, state, parms, decay) {
browser()
with(as.list(c(state, parms)), {
dS = alpha - deltas*S - beta*S*V
dI = beta*S*V - deltai*I
dV = pi*I - c*V
#browser()
list(c(dS, dI, dV))
})
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=3.547, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
state
#gets data given any set of parameters
getmodel = function(parameters, patient, decay, times, known){
alpha = unname(parameters[1])
deltas = unname(parameters[2])
pi = unname(parameters[3])
beta = unname(parameters[4])
deltai = unname(parameters[5])
V = unname(known[1])
S=alpha/(deltas+beta*unname(V))
I=beta*unname(S)*unname(V)/deltai
c = pi*I/V
#browser()
state = c(S=S, I=I, V=(patient$viral[1]/1000))
browser()
model = as.data.frame(ode(y=state, times=times, func=ODE,
parms=c(alpha=alpha,deltas=deltas,beta=beta,deltai=deltai,
pi=pi,c=c),
decay=decay, maxsteps=1e6))
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=3.547, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
V
state
state
state
#gets data given any set of parameters
getmodel = function(parameters, patient, decay, times, known){
alpha = unname(parameters[1])
deltas = unname(parameters[2])
pi = unname(parameters[3])
beta = unname(parameters[4])
deltai = unname(parameters[5])
V = unname(known[1])
S=alpha/(deltas+beta*unname(V))
I=beta*unname(S)*unname(V)/deltai
c = pi*I/V
#browser()
state = c(S=S, I=I, V=(patient$viral[1]/1000))
browser()
model = as.data.frame(ode(y=state, times=times, func=ODE,
parms=c(alpha=alpha,deltas=deltas,beta=beta,deltai=deltai,
pi=pi,c=c),
decay=decay, maxsteps=1e6))
}
#diff equations
ODE = function(times, state, parms, decay) {
browser()
with(as.list(c(state, parms)), {
dS = alpha - deltas*S - beta*S*V
dI = beta*S*V - deltai*I
dV = pi*I - c*V
#browser()
list(c(dS, dI, dV))
})
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=3.547, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
#diff equations
ODE = function(times, state, parms, decay) {
#browser()
with(as.list(c(state, parms)), {
dS = alpha - deltas*S - beta*S*V
dI = beta*S*V - deltai*I
dV = pi*I - c*V
#browser()
list(c(dS, dI, dV))
})
}
#gets data given any set of parameters
getmodel = function(parameters, patient, decay, times, known){
alpha = unname(parameters[1])
deltas = unname(parameters[2])
pi = unname(parameters[3])
beta = unname(parameters[4])
deltai = unname(parameters[5])
V = unname(known[1])
S=alpha/(deltas+beta*unname(V))
I=beta*unname(S)*unname(V)/deltai
c = pi*I/V
#browser()
state = c(S=S, I=I, V=(patient$viral[1]/1000))
#browser()
model = as.data.frame(ode(y=state, times=times, func=ODE,
parms=c(alpha=alpha,deltas=deltas,beta=beta,deltai=deltai,
pi=pi,c=c),
decay=decay, maxsteps=1e6))
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=900, beta=.001, deltai=1),
V=3.547, low=c(.2, .01, 500, .0001, .5),
high=c(2, 1, 10000, .01, 2))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.2, pi=500, beta=.001, deltai=1),
V=3.547, low=c(.05, .0001, 100, .0001, .5),
high=c(2, .1, 1000, .01, 2))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.001, pi=500, beta=.001, deltai=1),
V=3.547, low=c(.05, .0001, 100, .0001, .5),
high=c(2, .1, 1000, .01, 2))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.001, pi=500, beta=.001, deltai=1),
V=3.547, low=c(.2, .0001, 300, .0001, .5),
high=c(1, .1, 1000, .01, 1.5))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=1, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 100, .00005, .5),
high=c(.8, .1, 1000, .001, 1.5))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 100, .00005, .5),
high=c(.8, .1, 1000, .001, 1.5))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 100, .00005, .5),
high=c(.8, .1, 1000, .0001, 1.5))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 10, .00005, .5),
high=c(.8, .1, 1000, .0001, 1.5))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 10, .00005, .5),
high=c(.8, .1, 1000, .0001, 100))
fit20_both
fitmodel = function(patient, decay, parameters, V, low, high) {
known=c(V) #these are the fixed values
times = patient$studytime
fit=nloptr(x0=parameters, eval_f=cost, lb=low, ub=high,
patient=patient, decay=decay, times=times, known=known,
opts=list(algorithm="NLOPT_GN_MLSL_LDS", maxeval=10000, maxtime=60,
local_opts=list(algorithm="NLOPT_LN_COBYLA", xtol_rel=1e-10)))
modtime = seq(times[1], 200, 1)
modparam = fit$solution
modelopt = getmodel(modparam, patient, decay, modtime, known)
plot(times, log10(patient$viral), ylim=c(1, 5), xlim=c(-20,200))
lines(modtime, log10(1000*modelopt$V), type='l')
return(fit)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .001, 10, .00005, .5),
high=c(.9, .1, 1000, .0001, 1.5))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.001, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .01, 10, .00005, .5),
high=c(.9, .09, 1000, .0001, 1.1))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.02, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .01, 10, .00005, .5),
high=c(.9, .09, 1000, .0001, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.02, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .01, 10, .00005, .5),
high=c(.9, .09, 1000, .00005, 1.1))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.02, pi=500, beta=.00005, deltai=1),
V=3.547, low=c(.4, .01, 10, .00005, .5),
high=c(.9, .09, 1000, .00005, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.02, pi=500, beta=.000005, deltai=1),
V=3.547, low=c(.4, .01, 10, .000005, .5),
high=c(.9, .09, 1000, .000005, 1.1))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.6, deltas=.02, pi=500, beta=.0001, deltai=1),
V=3.547, low=c(.4, .01, 10, .00005, .5),
high=c(.9, .09, 1000, .0005, 1.1))
#this fits the model to the data with a combination of a global algorithm and a local algorithm
fitmodel = function(patient, decay, parameters, V, low, high) {
known=c(V) #these are the fixed values
times = patient$studytime
fit=nloptr(x0=parameters, eval_f=cost, lb=low, ub=high,
patient=patient, decay=decay, times=times, known=known,
opts=list(algorithm="NLOPT_GN_MLSL_LDS", maxeval=10000, maxtime=30,
local_opts=list(algorithm="NLOPT_LN_COBYLA", xtol_rel=1e-10)))
modtime = seq(times[1], 200, 1)
modparam = fit$solution
modelopt = getmodel(modparam, patient, decay, modtime, known)
plot(times, log10(patient$viral), ylim=c(1, 5), xlim=c(-20,200))
lines(modtime, log10(1000*modelopt$V), type='l')
return(fit)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=300, deltas=.02, pi=1000, beta=.0001, deltai=1),
V=3.547, low=c(200, .01, 300, .00005, .5),
high=c(500, .09, 1000, .0005, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=300, deltas=.02, pi=1000, beta=.0001, deltai=1),
V=3.547, low=c(20, .01, 300, .00005, .5),
high=c(500, .09, 1000, .0005, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1),
V=3.547, low=c(2, .01, 300, .00005, .5),
high=c(500, .09, 1000, .0005, 1.1))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1),
V=3.547, low=c(.2, .01, 300, .00005, .5),
high=c(2, .09, 1000, .0005, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1),
V=3.547, low=c(.02, .01, 300, .00005, .5),
high=c(2, .09, 1000, .0005, 1.1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.00005, deltai=1),
V=3.547, low=c(.02, .01, 300, .000005, .5),
high=c(2, .09, 1000, .00005, 1.1))
fit20_both
getmodel = function(parameters, patient, decay, times, known){
alpha = unname(parameters[1])
deltas = unname(parameters[2])
pi = unname(parameters[3])
beta = unname(parameters[4])
deltai = unname(parameters[5])
V = unname(known[1])
S=alpha/(deltas+beta*unname(V))
I=beta*unname(S)*unname(V)/deltai
c = unname(parameters[6])
#browser()
state = c(S=S, I=I, V=(patient$viral[1]/1000))
#browser()
model = as.data.frame(ode(y=state, times=times, func=ODE,
parms=c(alpha=alpha,deltas=deltas,beta=beta,deltai=deltai,
pi=pi,c=c),
decay=decay, maxsteps=1e6))
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23),
V=3.547, low=c(.02, .01, 300, .00005, .5, 100),
high=c(2, .09, 1000, .0005, 1.5, 3))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23),
V=3.547, low=c(.02, .01, 300, .00005, .5, 3),
high=c(2, .09, 1000, .0005, 1.5, 100))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20),
high=c(2, .09, 1000, .0005, 1.5, 100))
fit20_both
#gets data given any set of parameters
getmodel = function(parameters, patient, decay, times, known){
alpha = unname(parameters[1])
deltas = unname(parameters[2])
pi = unname(parameters[3])
beta = unname(parameters[4])
deltai = unname(parameters[5])
V = unname(known[1])
S = unname(parameters[7])
I = unname(parameters[8])
c = unname(parameters[6])
#browser()
state = c(S=S, I=I, V=(patient$viral[1]/1000))
#browser()
model = as.data.frame(ode(y=state, times=times, func=ODE,
parms=c(alpha=alpha,deltas=deltas,beta=beta,deltai=deltai,
pi=pi,c=c),
decay=decay, maxsteps=1e6))
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=10, I=.5),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, 2, .00001),
high=c(2, .09, 1000, .0005, 1.5, 100, 50, 1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=10, I=.5),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, 2, .00001),
high=c(2, .09, 1000, .0005, 1.5, 100, 20, 1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=3, I=.5),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, .01, .00001),
high=c(2, .09, 1000, .0005, 1.5, 100, 10, 20))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=15,
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, .00001, 5),
high=c(2, .09, 1000, .0005, 1.5, 100, 1, 30))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=15),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, .00001, 5),
high=c(2, .09, 1000, .0005, 1.5, 100, 1, 30))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.2, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=15),
V=3.547, low=c(.02, .01, 300, .00005, .5, 20, .00001, 5),
high=c(2, .09, 1000, .0005, 1.5, 100, .1, 20))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=7),
V=3.547, low=c(.2, .01, 300, .00005, .5, 20, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .1, 20))
cost = function(parameters, patient, decay, times, known){
model = getmodel(parameters, patient, decay, times, known)
for(i in 1:length(times)){
if(model$S[i]<1*10^-8 || is.na(model$S[i])){
model$S[i]=10^-8
}
if(model$I[i]<1*10^-8 || is.na(model$I[i])){
model$I[i]=10^-8
}
if(model$V[i]<1*10^-8 || is.na(model$V[i])){
model$V[i]=10^-8
}
}
vm = log10(1000*model$V)
vd = log10(patient$viral)
#browser()
diff = 0
for (i in 1:length(times)){
diff = diff + abs(vm[i] - vd[i])
}
diff[length(times)+1] = 1000*abs(known[1]-model$V[length(times)])
return(diff)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=7),
V=3.547, low=c(.2, .01, 300, .00005, .5, 20, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .1, 20))
traceback()
#function to be optimized
cost = function(parameters, patient, decay, times, known){
model = getmodel(parameters, patient, decay, times, known)
for(i in 1:length(times)){
if(model$S[i]<1*10^-8 || is.na(model$S[i])){
model$S[i]=10^-8
}
if(model$I[i]<1*10^-8 || is.na(model$I[i])){
model$I[i]=10^-8
}
if(model$V[i]<1*10^-8 || is.na(model$V[i])){
model$V[i]=10^-8
}
}
vm = log10(1000*model$V)
vd = log10(patient$viral)
#browser()
diff = 0
for (i in 1:length(times)){
diff = diff + abs(vm[i] - vd[i])
}
diff = diff + 1000*abs(known[1]-model$V[length(times)])
return(diff)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=7),
V=3.547, low=c(.2, .01, 300, .00005, .5, 20, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .1, 20))
fit20_both
#function to be optimized
cost = function(parameters, patient, decay, times, known){
model = getmodel(parameters, patient, decay, times, known)
for(i in 1:length(times)){
if(model$S[i]<1*10^-8 || is.na(model$S[i])){
model$S[i]=10^-8
}
if(model$I[i]<1*10^-8 || is.na(model$I[i])){
model$I[i]=10^-8
}
if(model$V[i]<1*10^-8 || is.na(model$V[i])){
model$V[i]=10^-8
}
}
vm = log10(1000*model$V)
vd = log10(patient$viral)
#browser()
diff = 0
for (i in 1:length(times)){
diff = diff + abs(vm[i] - vd[i])
}
#c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=7),
S = unname(parameters[1]/(parameters[2]+parameters[4]*known[1]))
I = unname(parameters[4]*S*known[1]/parameters[5])
V = unname(parameters[3]*I/parameters[6])
diff = diff + 1000*abs(known[1]-V)
return(diff)
}
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=7),
V=3.547, low=c(.2, .01, 300, .00005, .5, 20, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .1, 20))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.01, I=5),
V=3.547, low=c(.2, .01, 300, .00005, .5, 3, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .1, 20))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.001, I=5),
V=3.547, low=c(.2, .01, 300, .00005, .5, 3, .00001, 5),
high=c(1, .09, 1000, .0005, 1.5, 100, .001, 20))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.0001, I=5),
V=3.547, low=c(.2, .01, 300, .00005, .5, 3, .000001, 1),
high=c(1, .09, 1000, .0005, 1.5, 100, .0001, 10))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.0001, I=5),
V=3.547, low=c(.2, .01, 300, .00005, .5, 20, .000001, 1),
high=c(1, .09, 1000, .0005, 1.5, 100, .0001, 10))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.0001, I=5),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, .000001, 1),
high=c(1, .09, 1000, .0005, 1.5, 100, .0001, 10))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.0001, I=1),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, .000001, .1),
high=c(1, .09, 1000, .0005, 1.5, 100, .0001, 2))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=1000, beta=.0001, deltai=1, c=23, S=.0001, I=.1),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, .000001, .01),
high=c(1, .09, 1000, .0005, 1.5, 100, .0001, 1))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=600, beta=.0001, deltai=1, c=23, S=.0001, I=.1),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, .000001, .01),
high=c(1, .09, 800, .0005, 1.5, 100, .0001, 1))
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=800, beta=.0001, deltai=1, c=23, S=.0001, I=.1),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, 0, 0),
high=c(1, .09, 1000, .0005, 1.5, 100, 10, 100))
fit20_both
fit20_both = fitmodel(patient20, decay20,
parameters = c(alpha=.8, deltas=.02, pi=800, beta=.0001, deltai=1, c=23, S=1, I=10),
V=3.547, low=c(.2, .01, 300, .0000005, .5, 20, 0, 0),
high=c(1, .09, 1000, .0005, 1.5, 100, 5, 100))
fit20
fit20_both
